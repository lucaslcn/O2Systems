- criar projeto novo Java
- criar pacotes: config, entidades, visao
- criar pasta \lib (caso não crie e coloque automaticamente)
- adicionar driver do banco: PostgreSQL ou MySQL (caso não coloque automaticamente no projeto)
- assistente de configuração Hibernate -> cria arquivo hibernate.cfg.xml
- assistente de configuração engenharia reversa Hibernate -> cria arquivo hibernate.reveng.xml (se não criar, copiar do exemplo)
- criar HibernateUtil para fábrica de sessões

* Entidades
1- criar POJOS: se marcar opção Anotações EJB3, os arquivos serão gerados com annotations. Caso contrário, colocar manualmente após nas entidades.
Quando feito pelo POJO:
- notação para campo serial
    @Id
    @Column(name="idTabela")
    @GeneratedValue(strategy = GenerationType.IDENTITY)

2- criar via Persistência: já cria com marcação de id serial (é essa referência ao Identity)


A- quando for utilizado XML como mapeamento, modificar campo id para 'increment' no respectivo XML

B- quanto for utilizado Annotations, ajustar no arquivo hibernate.cfg.xml o mapeamento para anotações: 
Ex.: <mapping class="pacote.Classe"/>


- método SALVAR

        Session sessao = null;
        try {
            sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction t = sessao.beginTransaction();

            Classe obj = new Classe();
            obj.setNome(tfdNome.getText());

            sessao.save(obj);
            t.commit();

        } catch (HibernateException he) {
            he.printStackTrace();
        } finally {
            sessao.close();
        }


- método para consultar
        List resultado = null;

        try {
            Session sessao = HibernateUtil.getSessionFactory().openSession();
            sessao.beginTransaction();

            // busca por código
//            int id = 3;
//            org.hibernate.Query q = sessao.createQuery("from Classe where id = " + id);

            // busca todos os registros
            // observar: a classe Classe no from -> C maiúsculo
            org.hibernate.Query q = sessao.createQuery("from Classe");
            resultado = q.list();

            for (Object o : resultado) {
                Classe s = (Classe) o;
                System.out.print("id: " + s.getId() + " ");
                System.out.println("nome: " + s.getNome());
            }

        } catch (HibernateException he) {
            he.printStackTrace();
        }
