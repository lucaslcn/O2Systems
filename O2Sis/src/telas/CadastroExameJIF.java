/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import dao.AuditoriaDAO;
import dao.ExameDAO;
import persistencia.BasicScreen;
import dao.PlanoDAO;
import gema.Gema;
import gema.Mensagens;
import gema.ValidaCampo;
import java.math.BigInteger;
import javax.swing.JOptionPane;
import negocio.Exames;
import negocio.Usuario;
import org.hibernate.HibernateException;
import registros.Atividade;
import registros.LogAuditoria;

/**
 *
 * @author XorNOTE
 */
public class CadastroExameJIF extends javax.swing.JInternalFrame implements BasicScreen {

    Exames exame;
    Usuario usuario;
    /**
     * Creates new form CadastroPlanoSaudeJIF
     */
    public CadastroExameJIF(Usuario usuario) {
        initComponents();
        limpar();
        situacaoNovo();
        this.usuario = usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JToggleButton();
        btnPesquisar = new javax.swing.JToggleButton();
        btnDeletar = new javax.swing.JToggleButton();
        btnEditar = new javax.swing.JToggleButton();
        btnSalvar = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTF_NomeExame = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jS_PrazoEntrega = new javax.swing.JSpinner();
        jS_DuracaoTempo = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jTF_ValorExame = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setClosable(true);
        setTitle("Cadastro Exames");

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_delete.png"))); // NOI18N
        btnDeletar.setSelected(true);
        btnDeletar.setText("Arquivar");
        btnDeletar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_add.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastro Exames");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Básicos"));

        jLabel3.setText("Nome Exame (*)");

        jTF_NomeExame.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTF_NomeExame.setText("Raio X");
        jTF_NomeExame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_NomeExameActionPerformed(evt);
            }
        });

        jLabel4.setText("Prazo Entrega (*)");

        jLabel5.setText("dia(s)");

        jLabel6.setText("Tempo de Duração (*)");

        jS_PrazoEntrega.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jS_DuracaoTempo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setText("Valor do Exame R$ (*)");

        jTF_ValorExame.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTF_ValorExame.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTF_ValorExame.setText("0.00");
        jTF_ValorExame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTF_ValorExameKeyTyped(evt);
            }
        });

        jLabel8.setText("minuto(s)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTF_ValorExame, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jS_PrazoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jS_DuracaoTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(jTF_NomeExame))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_NomeExame, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jS_PrazoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jS_DuracaoTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTF_ValorExame, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int resposta = Mensagens.questionarAcao();
        if (resposta == JOptionPane.NO_OPTION) {

        } else if (resposta == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        Exames k = (Exames) Gema.pesquisar(new ExameDAO());

        if (k != null) {
            this.exame = k;
            preencher();
            situacaoVisualizacao();
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            
            String nomeExame = jTF_NomeExame.getText();
            int prazoEntrega = (int) jS_PrazoEntrega.getValue();
            String valorPlano = jTF_ValorExame.getText().replace(",", ".");
            int duracaoExame = (int) jS_DuracaoTempo.getValue();
            System.out.println("Valor: " + valorPlano);
            
            String[] campos = {"nome do exame", "prazo de entrega", "duração do exame", "valor do plano"};
            String[] valor = {nomeExame, prazoEntrega + "", duracaoExame + "", valorPlano};
            Integer[] qtd = {1, 1, 1, 1};
            
            
            String r = ValidaCampo.campoVazio(campos, qtd, valor);

            
            if (r == null) {
//                Pegando dados antigos da tabela;
                String[] infoOld = auditoria();
                
                popular();
                
//                Pegando dados novos da tabela
                String[] infoNew = auditoria();
                
//                Preenchendo a auditoria
                Atividade logAuditoria = new Atividade();
                logAuditoria.setInformacaoOld(infoOld);
                logAuditoria.setInformacaoNew(infoNew);
                logAuditoria.setOnde(Atividade.FROM_EXAME);
                logAuditoria.setUsuario(usuario);
                
                
                String s;
                if (exame.getIdexame() != null) {
                    s = new ExameDAO().update(this.exame);
                    logAuditoria.setAcao(Atividade.ACAO_EDITADO); // Defido para a Auditoria Editado
                } else {
                    s = new ExameDAO().insert(this.exame);
                    logAuditoria.setAcao(Atividade.ACAO_INSERIDO); // Defido para a Auditoria Inserido
                }

                if (s == null) {
                    String audi = "";
                    if(LogAuditoria.status()){
                        audi = logAuditoria.registraatividade();
                        if(audi == null){
                            audi = "";
                        } else {
                            audi = "\n" + audi;
                        }
                    }
                    
                    Mensagens.retornoAcao(Mensagens.salvo("Exame") + audi);
                    limpar();
                    situacaoNovo();
                } else {
                    Mensagens.retornoAcao(Mensagens.erroSalvar("Exame"));
                    jTF_NomeExame.requestFocus();
                }
            } else {
                Mensagens.retornoAcao( Mensagens.preenchaOsCampos("Os seguintes campos obrigatórios estão vazios:\n" + r) );
            }
        } catch (HibernateException he) {
            System.out.println(he);
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        situacaoEditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTF_NomeExameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_NomeExameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_NomeExameActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        int resposta = Mensagens.confirmarexclusao();
        if (resposta == JOptionPane.YES_OPTION) {
            try {
//                Pegando dados antigos da tabela;
                String[] infoOld = auditoria();
//                Pegando dados novos da tabela
                String[] infoNew = auditoria();
//                Preenchendo a auditoria
                Atividade logAuditoria = new Atividade();
                logAuditoria.setInformacaoOld(infoOld);
                logAuditoria.setInformacaoNew(infoNew);
                logAuditoria.setOnde(Atividade.FROM_EXAME);
                logAuditoria.setAcao(Atividade.ACAO_ARQUIVADO);
                logAuditoria.setUsuario(usuario);
                
                this.exame.setStatus(false);
                String r;
                r = new ExameDAO().update(this.exame);
                situacaoNovo();
                if (r == null) {
//                    Executando a Auditoria
                    String audi = "";
                    if(LogAuditoria.status()){
                        audi = logAuditoria.registraatividade();
                        if(audi == null){
                            audi = "";
                        } else {
                            audi = "\n" + audi;
                        }
                    }
                    
                    Mensagens.retornoAcao(Mensagens.arquivado("Exame") + audi); //Acrecentar o resultado da auditoria a msg.
                    limpar();
                    situacaoNovo();
                } else {
                    Mensagens.retornoAcao(Mensagens.erroArquivado("Exame"));

                }
            } catch (HibernateException he) {
                System.out.println(he);
            }
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void jTF_ValorExameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_ValorExameKeyTyped
        String caracteres = "0987654321,.";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jTF_ValorExameKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnDeletar;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JToggleButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jS_DuracaoTempo;
    private javax.swing.JSpinner jS_PrazoEntrega;
    private javax.swing.JTextField jTF_NomeExame;
    private javax.swing.JTextField jTF_ValorExame;
    // End of variables declaration//GEN-END:variables

    @Override
    public void preencher() {
        jTF_NomeExame.setText(this.exame.getNomeExame());
        jS_DuracaoTempo.setValue(this.exame.getDuracao());
        jS_PrazoEntrega.setValue(this.exame.getPrazoRetirada());
        jTF_ValorExame.setText(this.exame.getValor() + "");
    }

    @Override
    public void limpar() {
        this.exame = new Exames();
        jTF_NomeExame.setText("");
        jS_DuracaoTempo.setValue(5);
        jS_PrazoEntrega.setValue(1);
        jTF_ValorExame.setText("");

        jTF_NomeExame.requestFocus();
    }

    @Override
    public void popular() {
        this.exame.setNomeExame(jTF_NomeExame.getText());
        this.exame.setPrazoRetirada((int) jS_PrazoEntrega.getValue());
        this.exame.setDuracao((int) jS_DuracaoTempo.getValue());

        String valorPlano = jTF_ValorExame.getText().replace(",", ".");
        BigInteger valor = new BigInteger(valorPlano);
        this.exame.setValor(valor);

        this.exame.setStatus(true);
    }

    @Override
    public void situacaoNovo() {
        jTF_NomeExame.setEnabled(true);
        jS_DuracaoTempo.setEnabled(true);
        jS_PrazoEntrega.setEnabled(true);
        jTF_ValorExame.setEnabled(true);

        btnCancelar.setEnabled(true);
        btnDeletar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnPesquisar.setEnabled(true);
        btnSalvar.setEnabled(true);

        jS_DuracaoTempo.setValue(5);
        jS_PrazoEntrega.setValue(1);

        permissao();
    }

    @Override
    public void situacaoEditar() {
        jTF_NomeExame.setEnabled(true);
        jS_DuracaoTempo.setEnabled(true);
        jS_PrazoEntrega.setEnabled(true);
        jTF_ValorExame.setEnabled(true);

        btnCancelar.setEnabled(true);
        btnDeletar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnPesquisar.setEnabled(false);
        btnSalvar.setEnabled(true);
        permissao();
    }

    @Override
    public void situacaoVisualizacao() {
        jTF_NomeExame.setEnabled(false);
        jS_DuracaoTempo.setEnabled(false);
        jS_PrazoEntrega.setEnabled(false);
        jTF_ValorExame.setEnabled(false);

        btnCancelar.setEnabled(true);
        btnDeletar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnPesquisar.setEnabled(true);
        btnSalvar.setEnabled(false);
        permissao();
    }

    @Override
    public void permissao() {

    }

    @Override
    public String[] auditoria() {
        String[] r =
        {
            exame.getIdexame()+"",
            exame.getNomeExame(),
            exame.getDuracao()+"",
            exame.getPrazoRetirada()+"",
            exame.getValor()+"",
            exame.getStatus()+""
        };
        
        return r;
    }

}
