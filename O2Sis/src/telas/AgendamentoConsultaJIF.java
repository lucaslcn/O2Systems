/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import dao.AgendamentoExamesDAO;
import dao.ConsultasDAO;
import dao.ExameDAO;
import dao.FormaPagamentoDAO;
import dao.FuncionarioDAO;
import dao.PacienteDAO;
import dao.PlanoDAO;
import dao.ProntuarioDAO;
import gema.Gema;
import gema.Mensagens;
import gema.ValidaCampo;
import java.util.Date;
import javax.swing.JOptionPane;
import negocio.Consultas;
import negocio.Exames;
import negocio.FormaPagamento;
import negocio.Funcionario;
import negocio.Paciente;
import negocio.Plano;
import negocio.Prontuario;
import negocio.Usuario;
import org.hibernate.HibernateException;
import persistencia.BasicScreen;
import registros.Atividade;

/**
 *
 * @author Lucas
 */
public class AgendamentoConsultaJIF extends javax.swing.JInternalFrame implements BasicScreen {

    Paciente paciente;
    Funcionario funcionario;
    Consultas consultas;
    Plano plano;
    Usuario usuario;

    /**
     * Creates new form AgendamentoConsulta
     */
    public AgendamentoConsultaJIF(Usuario usuario) {
        initComponents();
        limpar();
        btnDeletar.setVisible(false);
        this.usuario = usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfdProfissional = new javax.swing.JTextField();
        btnPesquisar1 = new javax.swing.JToggleButton();
        tfHora = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        tfdPlano = new javax.swing.JTextField();
        btnPesquisar2 = new javax.swing.JToggleButton();
        tfdPaciente = new javax.swing.JTextField();
        tfData = new javax.swing.JFormattedTextField();
        btnCancelar = new javax.swing.JToggleButton();
        btnPesquisar3 = new javax.swing.JToggleButton();
        btnDeletar = new javax.swing.JToggleButton();
        btnEditar = new javax.swing.JToggleButton();
        btnSalvar = new javax.swing.JToggleButton();

        setTitle("Agendamento de consultas");
        setName("Agendamento de consultas"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Agendamento de consulta");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da consulta"));

        jLabel10.setText("Hora (*)");

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        jLabel9.setText("Data (*)");

        jLabel3.setText("Paciente (*)");

        jLabel4.setText("Profissional (*)");

        tfdProfissional.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfdProfissional.setText("Urologista do Caye");

        btnPesquisar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier.png"))); // NOI18N
        btnPesquisar1.setText("Pesquisar");
        btnPesquisar1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPesquisar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisar1ActionPerformed(evt);
            }
        });

        try {
            tfHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Plano Sa√∫de (*)");

        tfdPlano.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdPlanoFocusLost(evt);
            }
        });

        btnPesquisar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier.png"))); // NOI18N
        btnPesquisar2.setText("Pesquisar");
        btnPesquisar2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPesquisar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisar2ActionPerformed(evt);
            }
        });

        tfdPaciente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfdPaciente.setText("Anderson Caye");

        try {
            tfData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(tfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfdProfissional, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPesquisar1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(10, 10, 10)
                        .addComponent(tfdPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)))
                .addGap(51, 51, 51))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfdProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(btnPesquisar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(tfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfdPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnPesquisar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier.png"))); // NOI18N
        btnPesquisar3.setText("Pesquisar");
        btnPesquisar3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPesquisar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisar3ActionPerformed(evt);
            }
        });

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_delete.png"))); // NOI18N
        btnDeletar.setSelected(true);
        btnDeletar.setText("Arquivar");
        btnDeletar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_add.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        Paciente k = (Paciente) Gema.pesquisar(new PacienteDAO());

        if (k != null) {
            this.paciente = k;
            preencherPaciente();
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnPesquisar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisar1ActionPerformed
        Funcionario k = (Funcionario) Gema.pesquisar(new FuncionarioDAO());

        if (k != null) {
            this.funcionario = k;
            preencherProfissional();
        }


    }//GEN-LAST:event_btnPesquisar1ActionPerformed

    private void tfdPlanoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdPlanoFocusLost
        tfdPlano.setText(this.plano.getNomePlano());
    }//GEN-LAST:event_tfdPlanoFocusLost

    private void btnPesquisar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisar2ActionPerformed
        Plano k = (Plano) Gema.pesquisar(new PlanoDAO());

        if (k != null) {
            this.plano = k;
            preencherPlano();
        }
    }//GEN-LAST:event_btnPesquisar2ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int resposta = Mensagens.questionarAcao();
        if (resposta == JOptionPane.NO_OPTION) {

        } else if (resposta == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPesquisar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisar3ActionPerformed
        Consultas k = (Consultas) Gema.pesquisar(new ConsultasDAO());

        if (k != null) {
            this.consultas = k;
            preencher();
            situacaoVisualizacao();
        }
    }//GEN-LAST:event_btnPesquisar3ActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
//        int resposta = Mensagens.confirmarexclusao();
//        if (resposta == JOptionPane.YES_OPTION) {
//            try {
//                String[] infoOld = auditoria();
//                String[] infoNew = auditoria();
//                Atividade logAuditoria = autoAuditoria(infoOld, infoNew);
//
//                this.exame.setStatus(false);
//                String r;
//                r = new ExameDAO().update(this.exame, logAuditoria);
//                situacaoNovo();
//                if (r == null) {
//                    Mensagens.retornoAcao(Mensagens.arquivado("Exame")); //Acrecentar o resultado da auditoria a msg.
//                    limpar();
//                    situacaoNovo();
//                } else {
//                    Mensagens.retornoAcao(Mensagens.erroArquivado("Exame"));
//
//                }
//            } catch (HibernateException he) {
//                System.out.println(he);
//            }
//        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        situacaoEditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {

            int paciente = this.paciente.getIdpaciente();
            int funcionario = this.funcionario.getIdfuncionario();
            String data = tfData.getText();
            String hora = tfHora.getText();
            int plano = this.plano.getIdplano();

            String[] campos = {"paciente", "profissional", "data", "hora", "plano"};
            String[] valor = {paciente + "", funcionario + "", data, hora, plano + ""};
            Integer[] qtd = {1, 1, 1, 1, 1};

            String r = ValidaCampo.campoVazio(campos, qtd, valor);

            if (r == null) {
                String[] infoOld = auditoria();

                popular();

                String[] infoNew = auditoria();
                Atividade logAuditoria = autoAuditoria(infoOld, infoNew);

                String s;
                if (consultas.getIdconsultas() != null) {
                    s = new AgendamentoExamesDAO().update(this.consultas, logAuditoria);
                } else {
                    s = new AgendamentoExamesDAO().insert(this.consultas, logAuditoria);
                }

                if (s == null) {
                    Mensagens.retornoAcao(Mensagens.salvo("Consulta"));
                    limpar();
                    situacaoNovo();
                } else {
                    Mensagens.retornoAcao(Mensagens.erroSalvar("Consulta"));
                    tfdPaciente.requestFocus();
                }
            } else {
                Mensagens.retornoAcao(Mensagens.preenchaOsCampos("Os seguintes campos obrigat√≥rios est√£o vazios:\n" + r));
            }
        } catch (HibernateException he) {
            System.out.println(he);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    @Override
    public void preencher() {
        paciente = consultas.getIdpaciente();
        tfdPaciente.setText(paciente.getIdpessoa().getNomePessoa());
        funcionario = consultas.getIdfuncionario();
        tfdProfissional.setText(funcionario.getIdpessoa().getNomePessoa());
        plano = consultas.getIdplano();
        tfdPlano.setText(plano.getNomePlano());
        
        tfHora.setText(consultas.getHoraConsulta().getHours()+":"+consultas.getHoraConsulta().getMinutes());
        tfData.setText(consultas.getDataConsulta().getDay()+"/"+consultas.getDataConsulta().getMonth()+"/"+consultas.getDataConsulta().getYear());
        System.out.println(consultas.getDataConsulta().getDay()+"/"+consultas.getDataConsulta().getMonth()+"/"+consultas.getDataConsulta().getYear());
    }

    public void preencherPaciente() {
        tfdPaciente.setText(this.paciente.getIdpessoa().getNomePessoa());
    }
    
    public void preencherProfissional() {
        tfdProfissional.setText(this.funcionario.getIdpessoa().getNomePessoa());
    }

    public void preencherPlano() {
        tfdPlano.setText(this.plano.getNomePlano());
    }

    @Override
    public void limpar() {
        this.consultas = new Consultas();
        this.paciente = new Paciente();
        this.funcionario = new Funcionario();
        this.plano = new Plano();
        
        this.consultas.setIdpaciente(paciente);
        this.consultas.setIdfuncionario(funcionario);
        this.consultas.setIdplano(plano);
        
        tfdPaciente.setText("");
        tfdProfissional.setText("");
        tfdPlano.setText("");
        tfData.setText("");
        tfHora.setText("");
    }

    @Override
    public void popular() {
        this.consultas.setIdpaciente(paciente);
        this.consultas.setIdfuncionario(funcionario);
        this.consultas.setIdplano(plano);
        this.consultas.setIdformaPagamento(new FormaPagamentoDAO().consultarId(2));
        this.consultas.setIdprontuario(new ProntuarioDAO().consultarId(1));
        
        String[] data = tfData.getText().split("/");
        String[] hora = tfHora.getText().split(":");
        
        int year = Integer.parseInt(data[2]);
        int month = Integer.parseInt(data[1]);
        int day = Integer.parseInt(data[0]);
        int hour = Integer.parseInt(hora[0]);
        int min = Integer.parseInt(hora[1]);
        
        this.consultas.setDataConsulta(new Date(year, month, day, hour, min));
        this.consultas.setHoraConsulta(new Date(year, month, day, hour, min));
    }

    @Override
    public void situacaoNovo() {
        tfdPaciente.setEnabled(false);
        tfdProfissional.setEnabled(false);
        tfData.setEnabled(true);
        tfHora.setEnabled(true);
        tfdPlano.setEnabled(true);

        btnCancelar.setEnabled(true);
        btnDeletar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnPesquisar.setEnabled(true);
        btnSalvar.setEnabled(true);
        permissao();
    }

    @Override
    public void situacaoEditar() {
        tfdPaciente.setEnabled(false);
        tfdProfissional.setEnabled(false);
        tfData.setEnabled(true);
        tfHora.setEnabled(true);
        tfdPlano.setEnabled(false);

        btnCancelar.setEnabled(true);
        btnDeletar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnPesquisar.setEnabled(true);
        btnSalvar.setEnabled(true);
        permissao();
    }

    @Override
    public void situacaoVisualizacao() {
        tfdPaciente.setEnabled(false);
        tfdProfissional.setEnabled(false);
        tfData.setEnabled(false);
        tfHora.setEnabled(false);
        tfdPlano.setEnabled(false);

        btnCancelar.setEnabled(true);
        btnDeletar.setEnabled(false);
        btnEditar.setEnabled(true);
        btnPesquisar.setEnabled(true);
        btnSalvar.setEnabled(false);
        permissao();
    }

    @Override
    public void permissao() {
    }

    @Override
    public String[] auditoria() {
        String[] r
                = {
                    consultas.getIdconsultas() + "",
                    consultas.getDataConsulta() + "",
                    consultas.getHoraConsulta() + "",
                    consultas.getIdpaciente().getIdpaciente() + "",
                    consultas.getIdfuncionario() + "",
                    consultas.getIdprontuario() + "",
                    consultas.getIdplano() + ""

                };
        return r;
    }

    @Override
    public Atividade autoAuditoria(String[] iOld, String[] iNew) {
        Atividade logAuditoria = new Atividade();
        logAuditoria.setInformacaoOld(iOld);
        logAuditoria.setInformacaoNew(iNew);
        logAuditoria.setOnde(Atividade.FROM_CONSULTAS);
        logAuditoria.setUsuario(usuario);
        return logAuditoria;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnDeletar;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JToggleButton btnPesquisar1;
    private javax.swing.JToggleButton btnPesquisar2;
    private javax.swing.JToggleButton btnPesquisar3;
    private javax.swing.JToggleButton btnSalvar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField tfData;
    private javax.swing.JFormattedTextField tfHora;
    private javax.swing.JTextField tfdPaciente;
    private javax.swing.JTextField tfdPlano;
    private javax.swing.JTextField tfdProfissional;
    // End of variables declaration//GEN-END:variables
}
