/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import dao.AuditoriaDAO;
import gema.Formatacao;
import gema.Gema;
import gema.Mensagens;
import gema.ValidaCampo;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import negocio.Auditoria;
import negocio.Exames;
import negocio.Usuario;
import org.hibernate.HibernateException;
import registros.Atividade;

/**
 *
 * @author XorNOTE
 */
public class RegistroAuditoriaJD extends javax.swing.JDialog {
    
    List<Auditoria> array;
    Auditoria auditoria;
    Usuario usuario;
    
    /**
     * Creates new form RegistroAuditoriaJD
     */
    public RegistroAuditoriaJD(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.usuario = usuario;
        
        popularList();
        popularTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jP_btnDeAcao = new javax.swing.JPanel();
        btnDeletar = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jT_auditoria = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jTF_busca = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdc_DataFim = new com.toedter.calendar.JDateChooser();
        jdc_DataInicio = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registros de Auditoria");

        jP_btnDeAcao.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/application_delete.png"))); // NOI18N
        btnDeletar.setText("Arquivar");
        btnDeletar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        btnCancelar.setText("Fechar");
        btnCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jT_auditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Hora", "Responsável", "Onde", "Acao", "Info Antiga", "Info Nova"
            }
        ));
        jScrollPane2.setViewportView(jT_auditoria);
        if (jT_auditoria.getColumnModel().getColumnCount() > 0) {
            jT_auditoria.getColumnModel().getColumn(0).setMinWidth(60);
            jT_auditoria.getColumnModel().getColumn(0).setPreferredWidth(60);
            jT_auditoria.getColumnModel().getColumn(0).setMaxWidth(60);
            jT_auditoria.getColumnModel().getColumn(1).setMinWidth(100);
            jT_auditoria.getColumnModel().getColumn(1).setPreferredWidth(100);
            jT_auditoria.getColumnModel().getColumn(1).setMaxWidth(100);
            jT_auditoria.getColumnModel().getColumn(2).setMinWidth(60);
            jT_auditoria.getColumnModel().getColumn(2).setPreferredWidth(60);
            jT_auditoria.getColumnModel().getColumn(2).setMaxWidth(60);
            jT_auditoria.getColumnModel().getColumn(3).setMinWidth(150);
            jT_auditoria.getColumnModel().getColumn(3).setPreferredWidth(150);
            jT_auditoria.getColumnModel().getColumn(3).setMaxWidth(150);
            jT_auditoria.getColumnModel().getColumn(4).setMinWidth(150);
            jT_auditoria.getColumnModel().getColumn(4).setPreferredWidth(150);
            jT_auditoria.getColumnModel().getColumn(4).setMaxWidth(150);
            jT_auditoria.getColumnModel().getColumn(5).setMinWidth(100);
            jT_auditoria.getColumnModel().getColumn(5).setPreferredWidth(100);
            jT_auditoria.getColumnModel().getColumn(5).setMaxWidth(100);
            jT_auditoria.getColumnModel().getColumn(6).setMinWidth(294);
            jT_auditoria.getColumnModel().getColumn(6).setPreferredWidth(294);
            jT_auditoria.getColumnModel().getColumn(6).setMaxWidth(294);
            jT_auditoria.getColumnModel().getColumn(7).setMinWidth(295);
            jT_auditoria.getColumnModel().getColumn(7).setPreferredWidth(295);
            jT_auditoria.getColumnModel().getColumn(7).setMaxWidth(295);
        }

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        jTF_busca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel2.setText("Termo de Busca");

        jdc_DataFim.setDate(new Date());

        jdc_DataInicio.setDate(new Date());

        jLabel3.setText("Data Inicio");

        jLabel4.setText("Data Fim");

        javax.swing.GroupLayout jP_btnDeAcaoLayout = new javax.swing.GroupLayout(jP_btnDeAcao);
        jP_btnDeAcao.setLayout(jP_btnDeAcaoLayout);
        jP_btnDeAcaoLayout.setHorizontalGroup(
            jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_btnDeAcaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jP_btnDeAcaoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTF_busca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jP_btnDeAcaoLayout.createSequentialGroup()
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 773, Short.MAX_VALUE)
                        .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdc_DataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jP_btnDeAcaoLayout.createSequentialGroup()
                                .addComponent(jdc_DataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))))
                .addContainerGap())
        );
        jP_btnDeAcaoLayout.setVerticalGroup(
            jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jP_btnDeAcaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTF_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jP_btnDeAcaoLayout.createSequentialGroup()
                        .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jP_btnDeAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdc_DataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdc_DataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(123, 123, 123))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jP_btnDeAcao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jP_btnDeAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        String dtI = Formatacao.ajustaDateToStringDMA(jdc_DataInicio.getDate());
        String dtF = Formatacao.ajustaDateToStringDMA(jdc_DataFim.getDate());

        String[] campos = {"data inicio", "data fim"};
        String[] valor = {dtI, dtF};
        Integer[] qtd = {10, 10};
        
        String r = null; //resultado da comunicação do banco
        
        String res = ValidaCampo.campoVazio(campos, qtd, valor);
        if (res == null) {
            int resposta = Mensagens.confirmarArquivamento();
            if (resposta == JOptionPane.NO_OPTION) {
            } else if (resposta == JOptionPane.YES_OPTION) {
                try {
//                Pegando dados antigos da tabela;
                    String[] infoOld = {"Data Incio: " + dtI};
//                Pegando dados novos da tabela
                    String[] infoNew = {"Data Fim: " + dtF};

                    Atividade logAuditoria = autoAuditoria(infoOld, infoNew);
                    logAuditoria.setAcao(Atividade.ACAO_ARQUIVADO);
                    
                    List<Auditoria> a = new AuditoriaDAO().selectWithJoin("Auditoria", " data >= '" + Formatacao.ajustaDataAMD(dtI) + "' AND data <= '" + Formatacao.ajustaDataAMD(dtF) +"'");
                    for (Auditoria k : a){
                        r = new AuditoriaDAO().archivedAuditoria(k);
                    }
                    if (r == null) {
                        Mensagens.retornoAcao(Mensagens.arquivado("Período da Auditoria"));
                        new AuditoriaDAO().insertAuditoria(logAuditoria);
                        situacaoNovo();
                    } else {
                        Mensagens.retornoAcao(Mensagens.erroArquivado("Período da Auditoria"));

                    }
                } catch (HibernateException he) {
                    System.out.println(he);
                }
            }
        } else {
                Mensagens.retornoAcao(Mensagens.preenchaOsCampos("Os seguintes campos obrigatórios estão vazios:\n" + r));
            }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int resposta = Mensagens.questionarAcao();
        if (resposta == JOptionPane.NO_OPTION) {

        } else if (resposta == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RegistroAuditoriaJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RegistroAuditoriaJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RegistroAuditoriaJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RegistroAuditoriaJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                RegistroAuditoriaJD dialog = new RegistroAuditoriaJD(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnDeletar;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jP_btnDeAcao;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_busca;
    private javax.swing.JTable jT_auditoria;
    private com.toedter.calendar.JDateChooser jdc_DataFim;
    private com.toedter.calendar.JDateChooser jdc_DataInicio;
    // End of variables declaration//GEN-END:variables
    private void popularTabela(){
        List<Auditoria> array = new ArrayList();
        String criterio = jTF_busca.getText();
//        Total de colunas
        int columAll = 8;
//        Definição do cabecalho.
        Object[] cabecalho = new Object[columAll];
        cabecalho[0] = "Código";
        cabecalho[1] = "Data";
        cabecalho[2] = "Hora";
        cabecalho[3] = "Responsável";
        cabecalho[4] = "Onde";
        cabecalho[5] = "Ação";
        cabecalho[6] = "Info Antiga";
        cabecalho[7] = "Info Nova";

//        Preencha com o nome da tabela.
        String table = "Auditoria";

        //Executa a busca
        if (Gema.vazio(criterio, 1)) {
            //popularList();
            for (Auditoria a : this.array) {

                String s = a.getData().toString()
                        + " " + a.getHora().toString()
                        + " " + a.getIdauditoria().toString()
                        + " " + a.getIdusuario().getNick()
                        + " " + a.getInformacaonew()
                        + " " + a.getInformacaoold()
                        + " " + a.getOnde()
                        + " " + a.getAcao();

                if(possui(s, criterio)){
                    array.add(a);
                }
            }
        } else{
            //popularList();
            array = this.array;
        }

        //Definição dos dados da tabela.
        Object[][] dadosTabela = new Object[array.size()][columAll];
        int i = 0;
        try {
            for (Auditoria k : array) {
//              Definir os dados das colunas
                dadosTabela[i][0] = k.getIdauditoria();
                dadosTabela[i][1] = k.getData();
                dadosTabela[i][2] = k.getHora();
                dadosTabela[i][3] = k.getIdusuario().getNick();
                dadosTabela[i][4] = k.getOnde();
                dadosTabela[i][5] = k.getAcao();
                dadosTabela[i][6] = k.getInformacaoold();
                dadosTabela[i][7] = k.getInformacaonew();

                i++;
            }
        } catch (HibernateException he) {
            Mensagens.retornoAcao(
                    Mensagens.problemaPopularTabela("Auditoria")
                    + Mensagens.mensagemTecnica(he.toString())
            );
        }

        jT_auditoria.setModel(new DefaultTableModel(dadosTabela, cabecalho) {
            @Override
            // quando retorno for FALSE, a tabela nao é editavel
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            // alteracao no metodo que determina a coluna em que o objeto ImageIcon devera aparecer
            @Override
            public Class getColumnClass(int column) {

                if (column == 2) {
//                    return ImageIcon.class;
                }
                return Object.class;
            }
        });

        // permite seleção de apenas uma linha da tabela
        jT_auditoria.setSelectionMode(0);

        // redimensiona as colunas de uma tabela
//        580px tamanho da tabela
        TableColumn column = null;
        for (int j = 0; j < jT_auditoria.getColumnCount(); j++) {
            column = jT_auditoria.getColumnModel().getColumn(j);
            switch (j) {
                case 0: column.setPreferredWidth(60); break;
                case 1: column.setPreferredWidth(100); break;
                case 2: column.setPreferredWidth(60); break;
                case 3: column.setPreferredWidth(150); break;
                case 4: column.setPreferredWidth(150); break;
                case 5: column.setPreferredWidth(100); break;
                case 6: column.setPreferredWidth(294); break;
                case 7: column.setPreferredWidth(295); break;
            }
        }
    }
    
    private void popularList(){
        array = new AuditoriaDAO().select("Auditoria order by idauditoria");
    }
    
    private boolean possui(String s, String p){
        return s.contains(p);
    }

    private String[] auditoria() {
        return null;
    }

    private Atividade autoAuditoria(String[] iOld, String[] iNew) {
        Atividade logAuditoria = new Atividade();
        logAuditoria.setInformacaoOld(iOld);
        logAuditoria.setInformacaoNew(iNew);
        logAuditoria.setOnde(Atividade.FROM_REG_AUDITORIA);
        logAuditoria.setUsuario(usuario);
        return logAuditoria;
    }

    private void situacaoNovo() {
    }
}
